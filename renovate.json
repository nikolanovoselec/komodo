{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    ":disableRateLimiting"
  ],
  "hostRules": [
    {
      "matchHost": "ghcr.io",
      "username": "nikolanovoselec",
      "password": "{{ secrets.RENOVATE_GHCR_TOKEN }}"
    }
  ],
  "schedule": [
    "* */1 * * *"
  ],
  "timezone": "Europe/Zurich",
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "assignees": [
    "nikolanovoselec"
  ],
  "labels": [
    "renovate"
  ],
  "prHeader": "",
  "prBodyTemplate": "{{{header}}}\n{{#if upgrades}}### Updated stacks\\n{{#each upgrades}}- `{{packageName}}` â†’ `{{newVersion}}` (`{{packageFile}}`)\\n{{/each}}\\n\\n{{/if}}{{{table}}}{{{warnings}}}{{{notes}}}{{{changelogs}}}{{{configDescription}}}{{{controls}}}{{{footer}}}",
  "prHourlyLimit": 0,
  "automerge": false,
  "platformAutomerge": false,
  "packageRules": [
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "**"
      ],
      "enabled": false
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "tools/**"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "servarr/**"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "minecraft/**"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "dns_ntp/**"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "komodo_core/**"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "media_servers/**"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "middleware/**"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "storage/**"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "ai_llm/**"
      ],
      "enabled": true
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "middleware/authentik/compose.yaml"
      ],
      "matchDepNames": [
        "postgres",
        "docker.io/library/postgres"
      ],
      "matchDatasources": [
        "docker"
      ],
      "allowedVersions": "16-alpine"
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "middleware/authentik/compose.yaml"
      ],
      "matchDepNames": [
        "redis"
      ],
      "matchDatasources": [
        "docker"
      ],
      "allowedVersions": "alpine"
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "komodo_core/coolify/compose.yaml"
      ],
      "matchDepNames": [
        "postgres"
      ],
      "matchDatasources": [
        "docker"
      ],
      "allowedVersions": "15-alpine"
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "komodo_core/coolify/compose.yaml"
      ],
      "matchDepNames": [
        "redis"
      ],
      "matchDatasources": [
        "docker"
      ],
      "allowedVersions": "7-alpine"
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "servarr/flaresolver/compose.yaml"
      ],
      "matchDepNames": [
        "21hsmw/flaresolverr"
      ],
      "enabled": false
    },
    {
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "tools/zipline/**"
      ],
      "matchDepNames": [
        "postgres"
      ],
      "matchDatasources": [
        "docker"
      ],
      "allowedVersions": "16"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackagePatterns": [
        "^lscr\\.io/linuxserver/"
      ],
      "versioning": "regex:^v?(?<major>\\d+)(?:\\.(?<minor>\\d+))?(?:\\.(?<patch>\\d+[A-Za-z0-9]*))?(?:\\.(?<micro>\\d+[A-Za-z0-9]*))?(?:-(?<prerelease>[^-]+))?-ls(?<build>\\d+)$",
      "minimumReleaseAge": null
    }
  ]
}
